{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/create-employee/create-employee.component.ts","./src/app/create-employee/create-employee.component.html","./src/app/employee-details/employee-details.component.ts","./src/app/employee-details/employee-details.component.html","./src/app/employee-list/employee-list.component.ts","./src/app/employee-list/employee-list.component.html","./src/app/employee.service.ts","./src/app/employee.ts","./src/app/notification.service.ts","./src/app/update-employee/update-employee.component.ts","./src/app/update-employee/update-employee.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'employees', pathMatch: 'full' },\n  { path: 'employees', component: EmployeeListComponent },\n  { path: 'add', component: CreateEmployeeComponent },\n  { path: 'update/:id', component: UpdateEmployeeComponent },\n  { path: 'details/:id', component: EmployeeDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Employee Management System';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a routerLink=\"employees\" class=\"nav-link\" routerLinkActive=\"active\">Employee List</a>\n    </li>\n    <li class=\"nav-item\">\n      <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add Employee</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <br>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n  </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {EmployeeService} from './employee.service';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateEmployeeComponent,\n    EmployeeDetailsComponent,\n    EmployeeListComponent,\n    UpdateEmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NoopAnimationsModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatSnackBarModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { EmployeeService } from '../employee.service';\nimport { NotificationService } from '../notification.service';\nimport { Employee } from '../employee';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  submitted = false;\n\n  constructor(public employeeService: EmployeeService, private notificationService: NotificationService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newEmployee(): void {\n    this.submitted = false;\n    this.employee = new Employee();\n  }\n\n  save() {\n    this.employeeService.createEmployee(this.employeeService.form.value)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.employee = new Employee();\n    this.notificationService.success('Employee Created');\n    this.gotoList();\n  }\n\n  onSubmit() {\n    if (this.employeeService.form.valid) {\n      this.submitted = true;\n      this.save();\n    }\n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n\n  clearForm(){\n    this.employeeService.form.reset();\n    this.employeeService.initailizeFormGroup();\n  }\n}\n","<h3>Add New Employee</h3>\n\n<form [formGroup]=\"employeeService.form\" class=\"normal-form\" (submit)=\"onSubmit()\">\n  <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n    <mat-grid-tile>\n      <div class=\"controls-container\">\n        <input type=\"hidden\" formControlName=\"id\">\n        <mat-form-field>\n          <input formControlName=\"firstName\" matInput placeholder=\"First Name*\">\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input formControlName=\"lastName\" matInput placeholder=\"Last Name*\">\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input formControlName=\"email\" matInput placeholder=\"Email*\">\n          <mat-error *ngIf=\"employeeService.form.controls['email'].errors?.required\">This field is required</mat-error>\n          <mat-error *ngIf=\"employeeService.form.controls['email'].errors?.email\">Invalid email address</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input formControlName=\"phone\" matInput placeholder=\"Phone*\">\n          <mat-error *ngIf=\"employeeService.form.controls['phone'].errors?.required\">This field is required</mat-error>\n          <mat-error *ngIf=\"employeeService.form.controls['phone'].errors?.minlength\">Minimum of 8 numbers required</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <div class=\"controls-container\">\n        <mat-form-field>\n          <input formControlName=\"taxNumber\" matInput placeholder=\"Tax Number*\">\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select formControlName=\"employmentType\" placeholder=\"Employment Type*\">\n            <mat-option value=\"Permanent\">Permanent</mat-option>\n            <mat-option value=\"Part Time\">Part Time</mat-option>\n          </mat-select>\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select formControlName=\"department\" placeholder=\"Department*\">\n            <mat-option value=\"IT\">IT</mat-option>\n            <mat-option value=\"Finance\">Finance</mat-option>\n            <mat-option value=\"HR\">HR</mat-option>\n          </mat-select>\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select formControlName=\"role\" placeholder=\"Role*\">\n            <mat-option value=\"Software Developer\">Software Developer</mat-option>\n            <mat-option value=\"Tech Support\">Tech Support</mat-option>\n            <mat-option value=\"Database Admin\">Database Admin</mat-option>\n            <mat-option value=\"Employee Support\">Employee Support</mat-option>\n            <mat-option value=\"HR Manager\">HR Manager</mat-option>\n            <mat-option value=\"HR Admin\">HR Admin</mat-option>\n            <mat-option value=\"Financial Admin\">Financial Admin</mat-option>\n            <mat-option value=\"Accountant\">Accountant</mat-option>\n            <mat-option value=\"Business Analyst\">Business Analyst</mat-option>\n          </mat-select>\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <div class=\"button-row\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"employeeService.form.invalid\">Create</button>\n    <button mat-raised-button color=\"warn\" (click)=\"clearForm()\">Clear</button>\n  </div>\n</form>\n\n<!--<h3>Add New Employee</h3>-->\n<!--<div [hidden]=\"submitted\" style=\"width: 50%;\">-->\n<!--  <form (ngSubmit)=\"onSubmit()\">-->\n\n<!--&lt;!&ndash;    <br>&ndash;&gt;-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"firstName\">First Name</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"lastName\">Last Name</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"email\">Email</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"employee.email\" name=\"email\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"phone\">Phone Number</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"phone\" required [(ngModel)]=\"employee.phone\" name=\"phone\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"taxNumber\">Tax Number</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"taxNumber\" required [(ngModel)]=\"employee.taxNumber\" name=\"taxNumber\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"employmentType\">Employment Type</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"employmentType\" required [(ngModel)]=\"employee.employmentType\" name=\"employmentType\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"department\">Department</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"department\" required [(ngModel)]=\"employee.department\" name=\"department\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"role\">Role</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"role\" required [(ngModel)]=\"employee.role\" name=\"role\">-->\n<!--    </div>-->\n\n<!--    <br>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <button type=\"submit\" class=\"btn btn-success\">Create</button>-->\n<!--    </div>-->\n<!--  </form>-->\n<!--</div>-->\n\n<!--<div [hidden]=\"!submitted\">-->\n<!--  <h4>You submitted successfully!</h4>-->\n<!--  &lt;!&ndash; <button class=\"btn btn-success\" (click)=\"newEmployee()\">Add</button> &ndash;&gt;-->\n<!--</div>-->\n","import { Employee } from '../employee';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  list(){\n    this.router.navigate(['employees']);\n  }\n\n  updateInfo(id: number){\n    this.router.navigate(['update', id]);\n  }\n}\n","<h2 style=\"text-align: center\">Employee Details</h2>\n\n<hr/>\n\n<div *ngIf=\"employee\" style=\"text-align: center\">\n  <div>\n    <label><b>First Name: </b></label> {{employee.firstName}}\n  </div>\n  <div>\n    <label><b>Last Name: </b></label> {{employee.lastName}}\n  </div>\n  <div>\n    <label><b>Email: </b></label> {{employee.email}}\n  </div>\n  <div>\n    <label><b>Phone: </b></label> {{employee.phone}}\n  </div>\n<!--  <div>-->\n<!--    <label><b>Tax Number: </b></label> {{employee.taxNumber}}-->\n<!--  </div>-->\n  <div>\n    <label><b>Employment Type: </b></label> {{employee.employmentType}}\n  </div>\n  <div>\n    <label><b>Department: </b></label> {{employee.department}}\n  </div>\n  <div>\n    <label><b>Role: </b></label> {{employee.role}}\n  </div>\n</div>\n\n<br>\n<br>\n\n<div style=\"text-align: center\">\n  <button style=\"margin-right: 10px\" (click)=\"updateInfo((employee.id))\" class=\"btn btn-primary\">Update Info</button>\n  <button (click)=\"list()\" class=\"btn btn-primary\">Back to Employee List</button><br>\n</div>\n","import { EmployeeService } from '../employee.service';\nimport {Component, OnInit, ViewChild} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  // employees: Employee[] = [];\n  employees: MatTableDataSource<any>;\n  displayColumns: string[] = ['firstName', 'lastName', 'email', 'phone', 'employmentType', 'department', 'role', 'actions'];\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  searchKey: string;\n\n  constructor(private employeeService: EmployeeService,\n              private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.employeeService.getEmployeesList().subscribe(\n      list => {\n        const array = list.map(item => {\n          return {\n            id: item.id,\n            firstName: item.firstName,\n            lastName: item.lastName,\n            email: item.email,\n            phone: item.phone,\n            taxNumber: item.taxNumber,\n            employmentType: item.employmentType,\n            department: item.department,\n            role: item.role,\n          };\n        });\n        this.employees = new MatTableDataSource(array);\n        this.employees.sort = this.sort;\n        this.employees.paginator = this.paginator;\n      });\n  }\n\n  deleteEmployee(id: number) {\n    this.employeeService.deleteEmployee(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  employeeDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n\n  onSearchClear(){\n    this.searchKey = '';\n    this.applyFilter();\n  }\n\n  applyFilter(){\n    this.employees.filter = this.searchKey.trim().toLowerCase();\n  }\n}\n","<div class=\"search-div\">\n<!--  <button mat-raised-button>-->\n<!--    <mat-icon>add</mat-icon>New Employee-->\n<!--  </button>-->\n  <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\n    <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search Employees\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\n    <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n</div>\n<div class=\"mat-elevation-z8\">\n  <mat-table [dataSource]=\"employees\" matSort>\n    <ng-container matColumnDef=\"firstName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>First Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.firstName}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"lastName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.lastName}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.email}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"phone\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.phone}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"employmentType\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Employment Type</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.employmentType}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"department\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Department</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.department}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"role\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Role</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.role}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button (click)=\"employeeDetails((element.id))\" mat-icon-button><mat-icon>launch</mat-icon></button>\n        <button (click)=\"deleteEmployee((element.id))\" mat-icon-button color=\"warn\"><mat-icon>delete_outline</mat-icon></button>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"loading\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        Loading Data....\n      </mat-footer-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"noData\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        No Data\n      </mat-footer-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayColumns\" ></mat-row>\n    <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':employees!=null}\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(employees!=null && employees.data.length==0)}\"></mat-footer-row>\n  </mat-table>\n  <mat-paginator [pageSizeOptions]=\"[5,10,25,50]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\n</div>\n<!--        <td>-->\n<!--          <button (click)=\"employeeDetails(employee.id)\" class=\"btn btn-info\" >Details</button>-->\n<!--          <button (click)=\"deleteEmployee(employee.id)\" class=\"btn btn-danger\" style=\"  margin-left: 10px\">Delete</button>-->\n<!--        </td>-->\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Employee} from './employee';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  // private baseUrl = 'http://localhost:5000/employees';\n  private baseUrl = 'http://employeeapi-env.eba-9ps5d6d5.ap-southeast-2.elasticbeanstalk.com/employees';\n\n  constructor(private http: HttpClient) { }\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null),\n    firstName: new FormControl('', Validators.required),\n    lastName: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    phone: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    taxNumber: new FormControl('', Validators.required),\n    employmentType: new FormControl('', Validators.required),\n    department: new FormControl('', Validators.required),\n    role: new FormControl('', Validators.required),\n  });\n\n  initailizeFormGroup(){\n    this.form.setValue({\n      id: null,\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      taxNumber: '',\n      employmentType: '',\n      department: '',\n      role: '',\n    });\n  }\n\n\n  getEmployee(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createEmployee(employee: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n\n  updateEmployee(employee: Object): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getEmployeesList() {\n    return this.http.get<Employee[]>(`${this.baseUrl}`);\n  }\n}\n","export class Employee {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  taxNumber: string;\r\n  employmentType: string;\r\n  department: string;\r\n  role: string;\r\n  active: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  config: MatSnackBarConfig = {\n    duration: 2000,\n    horizontalPosition: 'center',\n    verticalPosition: 'top',\n  };\n\n  success(msg){\n    this.config.panelClass = ['notification', 'success'];\n    this.snackBar.open(msg, '', this.config);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n  submitted = false;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  updateEmployee() {\n    this.employeeService.updateEmployee(this.employee)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.employee = new Employee();\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.updateEmployee();\n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}\n","<!--<h3>Update Employee</h3>-->\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"phone\">Phone Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phone\" required [(ngModel)]=\"employee.phone\" name=\"phone\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"taxNumber\">Tax Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"taxNumber\" required [(ngModel)]=\"employee.taxNumber\" name=\"taxNumber\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"employmentType\">Employment Type</label>\n      <input type=\"text\" class=\"form-control\" id=\"employmentType\" required [(ngModel)]=\"employee.employmentType\" name=\"employmentType\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"department\">Department</label>\n      <input type=\"text\" class=\"form-control\" id=\"department\" required [(ngModel)]=\"employee.department\" name=\"department\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"role\">Role</label>\n      <input type=\"text\" class=\"form-control\" id=\"role\" required [(ngModel)]=\"employee.role\" name=\"role\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
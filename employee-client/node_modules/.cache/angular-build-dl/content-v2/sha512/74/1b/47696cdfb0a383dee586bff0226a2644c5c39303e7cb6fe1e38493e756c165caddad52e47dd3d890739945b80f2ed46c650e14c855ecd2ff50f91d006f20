{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/create-employee/create-employee.component.ts","webpack:///src/app/create-employee/create-employee.component.html","webpack:///src/app/employee-details/employee-details.component.ts","webpack:///src/app/employee-details/employee-details.component.html","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/employee.service.ts","webpack:///src/app/employee.ts","webpack:///src/app/notification.service.ts","webpack:///src/app/update-employee/update-employee.component.ts","webpack:///src/app/update-employee/update-employee.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CreateEmployeeComponent","employeeService","notificationService","router","employee","submitted","createEmployee","form","value","subscribe","data","console","log","error","success","gotoList","valid","save","navigate","reset","initailizeFormGroup","onSubmit","clearForm","EmployeeDetailsComponent","route","snapshot","params","getEmployee","updateInfo","list","EmployeeListComponent","displayColumns","reloadData","getEmployeesList","array","map","item","firstName","lastName","email","phone","taxNumber","employmentType","department","role","employees","sort","paginator","deleteEmployee","searchKey","applyFilter","filter","trim","toLowerCase","EmployeeService","http","baseUrl","required","minLength","setValue","get","post","put","responseType","providedIn","Employee","NotificationService","snackBar","config","duration","horizontalPosition","verticalPosition","msg","panelClass","open","UpdateEmployeeComponent","updateEmployee","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'employees', pathMatch: 'full' },\n  { path: 'employees', component: EmployeeListComponent },\n  { path: 'add', component: CreateEmployeeComponent },\n  { path: 'update/:id', component: UpdateEmployeeComponent },\n  { path: 'details/:id', component: EmployeeDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Employee Management System';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a routerLink=\"employees\" class=\"nav-link\" routerLinkActive=\"active\">Employee List</a>\n    </li>\n    <li class=\"nav-item\">\n      <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add Employee</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <br>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n  </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {EmployeeService} from './employee.service';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateEmployeeComponent,\n    EmployeeDetailsComponent,\n    EmployeeListComponent,\n    UpdateEmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NoopAnimationsModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatSnackBarModule\n  ],\n  providers: [EmployeeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { EmployeeService } from '../employee.service';\nimport { NotificationService } from '../notification.service';\nimport { Employee } from '../employee';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  submitted = false;\n\n  constructor(public employeeService: EmployeeService, private notificationService: NotificationService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newEmployee(): void {\n    this.submitted = false;\n    this.employee = new Employee();\n  }\n\n  save() {\n    this.employeeService.createEmployee(this.employeeService.form.value)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.employee = new Employee();\n    this.notificationService.success('Employee Created');\n    this.gotoList();\n  }\n\n  onSubmit() {\n    if (this.employeeService.form.valid) {\n      this.submitted = true;\n      this.save();\n    }\n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n\n  clearForm(){\n    this.employeeService.form.reset();\n    this.employeeService.initailizeFormGroup();\n  }\n}\n","<h3>Add New Employee</h3>\n\n<form [formGroup]=\"employeeService.form\" class=\"normal-form\" (submit)=\"onSubmit()\">\n  <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n    <mat-grid-tile>\n      <div class=\"controls-container\">\n        <input type=\"hidden\" formControlName=\"id\">\n        <mat-form-field>\n          <input formControlName=\"firstName\" matInput placeholder=\"First Name*\">\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input formControlName=\"lastName\" matInput placeholder=\"Last Name*\">\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input formControlName=\"email\" matInput placeholder=\"Email*\">\n          <mat-error *ngIf=\"employeeService.form.controls['email'].errors?.required\">This field is required</mat-error>\n          <mat-error *ngIf=\"employeeService.form.controls['email'].errors?.email\">Invalid email address</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <input formControlName=\"phone\" matInput placeholder=\"Phone*\">\n          <mat-error *ngIf=\"employeeService.form.controls['phone'].errors?.required\">This field is required</mat-error>\n          <mat-error *ngIf=\"employeeService.form.controls['phone'].errors?.minlength\">Minimum of 8 numbers required</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n      <div class=\"controls-container\">\n        <mat-form-field>\n          <input formControlName=\"taxNumber\" matInput placeholder=\"Tax Number*\">\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select formControlName=\"employmentType\" placeholder=\"Employment Type*\">\n            <mat-option value=\"Permanent\">Permanent</mat-option>\n            <mat-option value=\"Part Time\">Part Time</mat-option>\n          </mat-select>\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select formControlName=\"department\" placeholder=\"Department*\">\n            <mat-option value=\"IT\">IT</mat-option>\n            <mat-option value=\"Finance\">Finance</mat-option>\n            <mat-option value=\"HR\">HR</mat-option>\n          </mat-select>\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-select formControlName=\"role\" placeholder=\"Role*\">\n            <mat-option value=\"Software Developer\">Software Developer</mat-option>\n            <mat-option value=\"Tech Support\">Tech Support</mat-option>\n            <mat-option value=\"Database Admin\">Database Admin</mat-option>\n            <mat-option value=\"Employee Support\">Employee Support</mat-option>\n            <mat-option value=\"HR Manager\">HR Manager</mat-option>\n            <mat-option value=\"HR Admin\">HR Admin</mat-option>\n            <mat-option value=\"Financial Admin\">Financial Admin</mat-option>\n            <mat-option value=\"Accountant\">Accountant</mat-option>\n            <mat-option value=\"Business Analyst\">Business Analyst</mat-option>\n          </mat-select>\n          <mat-error>This field is required</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n  <div class=\"button-row\">\n    <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"employeeService.form.invalid\">Create</button>\n    <button mat-raised-button color=\"warn\" (click)=\"clearForm()\">Clear</button>\n  </div>\n</form>\n\n<!--<h3>Add New Employee</h3>-->\n<!--<div [hidden]=\"submitted\" style=\"width: 50%;\">-->\n<!--  <form (ngSubmit)=\"onSubmit()\">-->\n\n<!--&lt;!&ndash;    <br>&ndash;&gt;-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"firstName\">First Name</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"lastName\">Last Name</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"email\">Email</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"employee.email\" name=\"email\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"phone\">Phone Number</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"phone\" required [(ngModel)]=\"employee.phone\" name=\"phone\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"taxNumber\">Tax Number</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"taxNumber\" required [(ngModel)]=\"employee.taxNumber\" name=\"taxNumber\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"employmentType\">Employment Type</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"employmentType\" required [(ngModel)]=\"employee.employmentType\" name=\"employmentType\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"department\">Department</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"department\" required [(ngModel)]=\"employee.department\" name=\"department\">-->\n<!--    </div>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <label for=\"role\">Role</label>-->\n<!--      <input type=\"text\" class=\"form-control\" id=\"role\" required [(ngModel)]=\"employee.role\" name=\"role\">-->\n<!--    </div>-->\n\n<!--    <br>-->\n\n<!--    <div class=\"form-group\">-->\n<!--      <button type=\"submit\" class=\"btn btn-success\">Create</button>-->\n<!--    </div>-->\n<!--  </form>-->\n<!--</div>-->\n\n<!--<div [hidden]=\"!submitted\">-->\n<!--  <h4>You submitted successfully!</h4>-->\n<!--  &lt;!&ndash; <button class=\"btn btn-success\" (click)=\"newEmployee()\">Add</button> &ndash;&gt;-->\n<!--</div>-->\n","import { Employee } from '../employee';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  list(){\n    this.router.navigate(['employees']);\n  }\n\n  updateInfo(id: number){\n    this.router.navigate(['update', id]);\n  }\n}\n","<h2 style=\"text-align: center\">Employee Details</h2>\n\n<hr/>\n\n<div *ngIf=\"employee\" style=\"text-align: center\">\n  <div>\n    <label><b>First Name: </b></label> {{employee.firstName}}\n  </div>\n  <div>\n    <label><b>Last Name: </b></label> {{employee.lastName}}\n  </div>\n  <div>\n    <label><b>Email: </b></label> {{employee.email}}\n  </div>\n  <div>\n    <label><b>Phone: </b></label> {{employee.phone}}\n  </div>\n<!--  <div>-->\n<!--    <label><b>Tax Number: </b></label> {{employee.taxNumber}}-->\n<!--  </div>-->\n  <div>\n    <label><b>Employment Type: </b></label> {{employee.employmentType}}\n  </div>\n  <div>\n    <label><b>Department: </b></label> {{employee.department}}\n  </div>\n  <div>\n    <label><b>Role: </b></label> {{employee.role}}\n  </div>\n</div>\n\n<br>\n<br>\n\n<div style=\"text-align: center\">\n  <button style=\"margin-right: 10px\" (click)=\"updateInfo((employee.id))\" class=\"btn btn-primary\">Update Info</button>\n  <button (click)=\"list()\" class=\"btn btn-primary\">Back to Employee List</button><br>\n</div>\n","import { EmployeeService } from '../employee.service';\nimport {Component, OnInit, ViewChild} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  // employees: Employee[] = [];\n  employees: MatTableDataSource<any>;\n  displayColumns: string[] = ['firstName', 'lastName', 'email', 'phone', 'employmentType', 'department', 'role', 'actions'];\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  searchKey: string;\n\n  constructor(private employeeService: EmployeeService,\n              private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.employeeService.getEmployeesList().subscribe(\n      list => {\n        const array = list.map(item => {\n          return {\n            id: item.id,\n            firstName: item.firstName,\n            lastName: item.lastName,\n            email: item.email,\n            phone: item.phone,\n            taxNumber: item.taxNumber,\n            employmentType: item.employmentType,\n            department: item.department,\n            role: item.role,\n          };\n        });\n        this.employees = new MatTableDataSource(array);\n        this.employees.sort = this.sort;\n        this.employees.paginator = this.paginator;\n      });\n  }\n\n  deleteEmployee(id: number) {\n    this.employeeService.deleteEmployee(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  employeeDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n\n  onSearchClear(){\n    this.searchKey = '';\n    this.applyFilter();\n  }\n\n  applyFilter(){\n    this.employees.filter = this.searchKey.trim().toLowerCase();\n  }\n}\n","<div class=\"search-div\">\n<!--  <button mat-raised-button>-->\n<!--    <mat-icon>add</mat-icon>New Employee-->\n<!--  </button>-->\n  <mat-form-field class=\"search-form-field\" floatLabel=\"never\">\n    <input matInput [(ngModel)]=\"searchKey\" placeholder=\"Search Employees\" autocomplete=\"off\" (keyup)=\"applyFilter()\">\n    <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" *ngIf=\"searchKey\" (click)=\"onSearchClear()\">\n      <mat-icon>close</mat-icon>\n    </button>\n  </mat-form-field>\n</div>\n<div class=\"mat-elevation-z8\">\n  <mat-table [dataSource]=\"employees\" matSort>\n    <ng-container matColumnDef=\"firstName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>First Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.firstName}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"lastName\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.lastName}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.email}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"phone\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.phone}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"employmentType\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Employment Type</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.employmentType}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"department\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Department</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.department}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"role\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Role</mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">{{element.role}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef></mat-header-cell>\n      <mat-cell *matCellDef=\"let element\">\n        <button (click)=\"employeeDetails((element.id))\" mat-icon-button><mat-icon>launch</mat-icon></button>\n        <button (click)=\"deleteEmployee((element.id))\" mat-icon-button color=\"warn\"><mat-icon>delete_outline</mat-icon></button>\n      </mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"loading\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        Loading Data....\n      </mat-footer-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"noData\">\n      <mat-footer-cell *matFooterCellDef colspan=\"6\">\n        No Data\n      </mat-footer-cell>\n    </ng-container>\n    <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayColumns\" ></mat-row>\n    <mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':employees!=null}\"></mat-footer-row>\n    <mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(employees!=null && employees.data.length==0)}\"></mat-footer-row>\n  </mat-table>\n  <mat-paginator [pageSizeOptions]=\"[5,10,25,50]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\n</div>\n<!--        <td>-->\n<!--          <button (click)=\"employeeDetails(employee.id)\" class=\"btn btn-info\" >Details</button>-->\n<!--          <button (click)=\"deleteEmployee(employee.id)\" class=\"btn btn-danger\" style=\"  margin-left: 10px\">Delete</button>-->\n<!--        </td>-->\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {Employee} from './employee';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  // private baseUrl = 'http://localhost:5000/employees';\n  private baseUrl = 'http://employeeapi-env.eba-9ps5d6d5.ap-southeast-2.elasticbeanstalk.com/employees';\n\n  constructor(private http: HttpClient) { }\n\n  form: FormGroup = new FormGroup({\n    id: new FormControl(null),\n    firstName: new FormControl('', Validators.required),\n    lastName: new FormControl('', Validators.required),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    phone: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    taxNumber: new FormControl('', Validators.required),\n    employmentType: new FormControl('', Validators.required),\n    department: new FormControl('', Validators.required),\n    role: new FormControl('', Validators.required),\n  });\n\n  initailizeFormGroup(){\n    this.form.setValue({\n      id: null,\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      taxNumber: '',\n      employmentType: '',\n      department: '',\n      role: '',\n    });\n  }\n\n\n  getEmployee(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createEmployee(employee: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n\n  updateEmployee(employee: Object): Observable<Object> {\n    return this.http.put(`${this.baseUrl}`, employee);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getEmployeesList() {\n    return this.http.get<Employee[]>(`${this.baseUrl}`);\n  }\n}\n","export class Employee {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  taxNumber: string;\r\n  employmentType: string;\r\n  department: string;\r\n  role: string;\r\n  active: boolean;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {MatSnackBar, MatSnackBarConfig} from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n  config: MatSnackBarConfig = {\n    duration: 2000,\n    horizontalPosition: 'center',\n    verticalPosition: 'top',\n  };\n\n  success(msg){\n    this.config.panelClass = ['notification', 'success'];\n    this.snackBar.open(msg, '', this.config);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n  submitted = false;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  updateEmployee() {\n    this.employeeService.updateEmployee(this.employee)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.employee = new Employee();\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.updateEmployee();\n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}\n","<!--<h3>Update Employee</h3>-->\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"phone\">Phone Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phone\" required [(ngModel)]=\"employee.phone\" name=\"phone\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"taxNumber\">Tax Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"taxNumber\" required [(ngModel)]=\"employee.taxNumber\" name=\"taxNumber\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"employmentType\">Employment Type</label>\n      <input type=\"text\" class=\"form-control\" id=\"employmentType\" required [(ngModel)]=\"employee.employmentType\" name=\"employmentType\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"department\">Department</label>\n      <input type=\"text\" class=\"form-control\" id=\"department\" required [(ngModel)]=\"employee.department\" name=\"department\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"role\">Role</label>\n      <input type=\"text\" class=\"form-control\" id=\"role\" required [(ngModel)]=\"employee.role\" name=\"role\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Update</button>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
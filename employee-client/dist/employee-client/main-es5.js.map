{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/create-employee/create-employee.component.ts","webpack:///src/app/create-employee/create-employee.component.html","webpack:///src/app/employee-details/employee-details.component.ts","webpack:///src/app/employee-details/employee-details.component.html","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/employee.service.ts","webpack:///src/app/employee.ts","webpack:///src/app/update-employee/update-employee.component.ts","webpack:///src/app/update-employee/update-employee.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CreateEmployeeComponent","employeeService","router","employee","submitted","createEmployee","subscribe","data","console","log","error","gotoList","save","navigate","queryParams","refresh","onSubmit","EmployeeDetailsComponent","route","snapshot","params","getEmployee","list","EmployeeListComponent","reloadData","employees","getEmployeesList","deleteEmployee","EmployeeService","http","baseUrl","get","post","value","put","responseType","providedIn","Employee","UpdateEmployeeComponent","updateEmployee","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,UAAxB;AAAoCC,eAAS,EAAE;AAA/C,KADqB,EAErB;AAAEF,UAAI,EAAE,WAAR;AAAqBG,eAAS,EAAE;AAAhC,KAFqB,EAGrB;AAAEH,UAAI,EAAE,KAAR;AAAeG,eAAS,EAAE;AAA1B,KAHqB,EAIrB;AAAEH,UAAI,EAAE,YAAR;AAAsBG,eAAS,EAAE;AAAjC,KAJqB,EAKrB;AAAEH,UAAI,EAAE,aAAR;AAAuBG,eAAS,EAAE;AAAlC,KALqB,CAAvB;;QAYaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACnB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaU,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,4BAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,6V;AAAA;AAAA;ACPzB;;AAEE;;AACE;;AACE;;AAAqE;;AAAa;;AACpF;;AACA;;AACE;;AAA+D;;AAAY;;AAC7E;;AACF;;AACF;;AACA;;AACE;;AACA;;AAAgC;;AAAS;;AACzC;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAEF;;;;AAZkC;;AAAA;;;;;;;;;sEDNrBA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA2BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBANJ,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CAMI;;;;0HAGFA,S,EAAS;AAAA,uBAflB,2DAekB,EAdlB,kGAckB,EAblB,qGAakB,EAZlB,4FAYkB,EAXlB,kGAWkB;AAXK,kBAGvB,uEAHuB,EAIvB,oEAJuB,EAKvB,0DALuB,EAMvB,qEANuB;AAWL,O;AALF,K;;;;;sEAKPA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,kGAFY,EAGZ,qGAHY,EAIZ,4FAJY,EAKZ,kGALY,CADN;AAQRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,CARD;AAcRQ,mBAAS,EAAE,EAdH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;;;;;;;;;;;;;;;;AC1BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,uB;AAKX,uCAAoBC,eAApB,EACoBC,MADpB,EACoC;AAAA;;AADhB,aAAAD,eAAA,GAAAA,eAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAJpB,aAAAC,QAAA,GAAqB,IAAI,kDAAJ,EAArB;AACA,aAAAC,SAAA,GAAY,KAAZ;AAGuC;;;;mCAE5B,CACV;;;sCAEU;AACT,eAAKA,SAAL,GAAiB,KAAjB;AACA,eAAKD,QAAL,GAAgB,IAAI,kDAAJ,EAAhB;AACD;;;+BAEM;AACL,eAAKF,eAAL,CAAqBI,cAArB,CAAoC,KAAKF,QAAzC,EACGG,SADH,CACa,UAAAC,IAAI;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,WADjB,EACwC,UAAAG,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WAD7C;AAEA,eAAKP,QAAL,GAAgB,IAAI,kDAAJ,EAAhB;AACA,eAAKQ,QAAL;AACD;;;mCAEU;AACT,eAAKP,SAAL,GAAiB,IAAjB;AACA,eAAKQ,IAAL;AACD;;;mCAEU;AACT,eAAKV,MAAL,CAAYW,QAAZ,CAAqB,CAAC,YAAD,CAArB,EAAqC;AAAEC,uBAAW,EAAE;AAAEC,qBAAO,EAAE;AAAX;AAAf,WAArC;AACD;;;;;;;uBA9BUf,uB,EAAuB,kI,EAAA,uH;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,c;AAAA,suC;AAAA;AAAA;ACVpC;;AAAI;;AAAgB;;AACpB;;AACE;;AAAM;AAAA,mBAAY,IAAAgB,QAAA,EAAZ;AAAsB,WAAtB;;AAEJ;;AAEA;;AACE;;AAAuB;;AAAU;;AACjC;;AAAgE;AAAA;AAAA;;AAAhE;;AACF;;AAEA;;AACE;;AAAsB;;AAAS;;AAC/B;;AAA+D;AAAA;AAAA;;AAA/D;;AACF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAA4D;AAAA;AAAA;;AAA5D;;AACF;;AAEA;;AACE;;AAAmB;;AAAY;;AAC/B;;AAA4D;AAAA;AAAA;;AAA5D;;AACF;;AAEA;;AACE;;AAAuB;;AAAU;;AACjC;;AAAgE;AAAA;AAAA;;AAAhE;;AACF;;AAEA;;AACE;;AAA4B;;AAAe;;AAC3C;;AAAqE;AAAA;AAAA;;AAArE;;AACF;;AAEA;;AACE;;AAAwB;;AAAU;;AAClC;;AAAiE;AAAA;AAAA;;AAAjE;;AACF;;AAEA;;AACE;;AAAkB;;AAAI;;AACtB;;AAA2D;AAAA;AAAA;;AAA3D;;AACF;;AAEA;;AAEA;;AACE;;AAA8C;;AAAM;;AACtD;;AACF;;AACF;;AAEA;;AACE;;AAAI;;AAA2B;;AAEjC;;;;AAxDK;;AAAA;;AAOiE;;AAAA;;AAKD;;AAAA;;AAKH;;AAAA;;AAKA;;AAAA;;AAKI;;AAAA;;AAKK;;AAAA;;AAKJ;;AAAA;;AAKN;;AAAA;;AAW5D;;AAAA;;;;;;;;;sED5CQhB,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTP,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGA;;AACE;;AACE;;AAAO;;AAAG;;AAAY;;AAAI;;AAAS;;AACrC;;AACA;;AACE;;AAAO;;AAAG;;AAAW;;AAAI;;AAAS;;AACpC;;AACA;;AACE;;AAAO;;AAAG;;AAAO;;AAAI;;AAAS;;AAChC;;AACA;;AACE;;AAAO;;AAAG;;AAAO;;AAAI;;AAAS;;AAChC;;AAIA;;AACE;;AAAO;;AAAG;;AAAiB;;AAAI;;AAAS;;AAC1C;;AACA;;AACE;;AAAO;;AAAG;;AAAY;;AAAI;;AAAS;;AACrC;;AACA;;AACE;;AAAO;;AAAG;;AAAM;;AAAI;;AAAS;;AAC/B;;AACF;;;;;;AAvBuC;;AAAA;;AAGD;;AAAA;;AAGJ;;AAAA;;AAGA;;AAAA;;AAMU;;AAAA;;AAGL;;AAAA;;AAGN;;AAAA;;;;QDfpBsB,wB;AAKX,wCAAoBC,KAApB,EAAmDhB,MAAnD,EACoBD,eADpB,EACsD;AAAA;;AADlC,aAAAiB,KAAA,GAAAA,KAAA;AAA+B,aAAAhB,MAAA,GAAAA,MAAA;AAC/B,aAAAD,eAAA,GAAAA,eAAA;AAAqC;;;;mCAE9C;AAAA;;AACT,eAAKE,QAAL,GAAgB,IAAI,kDAAJ,EAAhB;AAEA,eAAKrB,EAAL,GAAU,KAAKoC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AAEA,eAAKnB,eAAL,CAAqBoB,WAArB,CAAiC,KAAKvC,EAAtC,EACGwB,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,iBAAI,CAACJ,QAAL,GAAgBI,IAAhB;AACD,WAJH,EAIK,UAAAG,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WAJV;AAKD;;;+BAEG;AACF,eAAKR,MAAL,CAAYW,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;;;;;;;uBAtBUI,wB,EAAwB,+H,EAAA,uH,EAAA,kI;AAAA,K;;;YAAxBA,wB;AAAwB,2C;AAAA,e;AAAA,a;AAAA,8H;AAAA;AAAA;ACXrC;;AAA+B;;AAAgB;;AAE/C;;AACA;;AA2BA;;AACA;;AAEA;;AACE;;AAAQ;AAAA,mBAAS,IAAAK,IAAA,EAAT;AAAe,WAAf;;AAAyC;;AAAqB;;AAAS;;AACjF;;;;AAhCK;;AAAA;;;;;;;;;sEDQQL,wB,EAAwB;cALpC,uDAKoC;eAL1B;AACTxB,kBAAQ,EAAE,sBADD;AAETC,qBAAW,EAAE,mCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAK0B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEPrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACaM;;AACE;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAkB;;AAEtB;;AAAI;;AAA2B;;AAC/B;;AAAI;;AAAuB;;AAC3B;;AAAI;;AAAiB;;AACrB;;AACE;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6D;;AAAO;;AAC5E;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyF;;AAAM;;AACzG;;AACF;;;;;;AAZM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDbC4B,qB;AAEX,qCAAoBtB,eAApB,EACoBC,MADpB,EACoC;AAAA;;AADhB,aAAAD,eAAA,GAAAA,eAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;mCAE3B;AACT,eAAKsB,UAAL;AACD;;;qCAEY;AACX,eAAKC,SAAL,GAAiB,KAAKxB,eAAL,CAAqByB,gBAArB,EAAjB;AACD;;;uCAEc5C,E,EAAY;AAAA;;AACzB,eAAKmB,eAAL,CAAqB0B,cAArB,CAAoC7C,EAApC,EACGwB,SADH,CAEI,UAAAC,IAAI,EAAI;AACNC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,kBAAI,CAACiB,UAAL;AACD,WALL,EAMI,UAAAd,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WANT;AAOD;;;wCAEe5B,E,EAAU;AACxB,eAAKoB,MAAL,CAAYW,QAAZ,CAAqB,CAAC,SAAD,EAAY/B,EAAZ,CAArB;AACD;;;;;;;uBAzBUyC,qB,EAAqB,kI,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA,e;AAAA,a;AAAA,4N;AAAA;AAAA;ACZlC;;AACE;;AACE;;AACE;;AACA;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAS;;AACb;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AAET;;AAAI;;AAAe;;AACnB;;AAAI;;AAAU;;AACd;;AAAI;;AAAI;;AACR;;AAAI;;AAAO;;AACb;;AACA;;AACA;;AACA;;;;AAcA;;AACF;;AACF;;AACF;;;;AAjBU;;AAAA;;;;;;;;;;sEDLGA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT9B,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaiC,e;AAIX,+BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFZ,aAAAC,OAAA,GAAU,mFAAV;AAEiC;;;;oCAE7BhD,E,EAAU;AACpB,iBAAO,KAAK+C,IAAL,CAAUE,GAAV,WAAiB,KAAKD,OAAtB,cAAiChD,EAAjC,EAAP;AACD;;;uCAEcqB,Q,EAAgB;AAC7B,iBAAO,KAAK0B,IAAL,CAAUG,IAAV,WAAkB,KAAKF,OAAvB,GAAkC3B,QAAlC,CAAP;AACD;;;uCAEcrB,E,EAAYmD,K,EAAU;AACnC,iBAAO,KAAKJ,IAAL,CAAUK,GAAV,WAAiB,KAAKJ,OAAtB,cAAiChD,EAAjC,GAAuCmD,KAAvC,CAAP;AACD;;;uCAEcnD,E,EAAU;AACvB,iBAAO,KAAK+C,IAAL,qBAAoB,KAAKC,OAAzB,cAAoChD,EAApC,GAA0C;AAAEqD,wBAAY,EAAE;AAAhB,WAA1C,CAAP;AACD;;;2CAEe;AACd,iBAAO,KAAKN,IAAL,CAAUE,GAAV,WAAiB,KAAKD,OAAtB,EAAP;AACD;;;;;;;uBAxBUF,e,EAAe,uH;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVQ,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Q;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,uB;AAMX,uCAAoBpB,KAApB,EAAmDhB,MAAnD,EACoBD,eADpB,EACsD;AAAA;;AADlC,aAAAiB,KAAA,GAAAA,KAAA;AAA+B,aAAAhB,MAAA,GAAAA,MAAA;AAC/B,aAAAD,eAAA,GAAAA,eAAA;AAHpB,aAAAG,SAAA,GAAY,KAAZ;AAGyD;;;;mCAE9C;AAAA;;AACT,eAAKD,QAAL,GAAgB,IAAI,kDAAJ,EAAhB;AAEA,eAAKrB,EAAL,GAAU,KAAKoC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;AAEA,eAAKnB,eAAL,CAAqBoB,WAArB,CAAiC,KAAKvC,EAAtC,EACGwB,SADH,CACa,UAAAC,IAAI,EAAI;AACjBC,mBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,kBAAI,CAACJ,QAAL,GAAgBI,IAAhB;AACD,WAJH,EAIK,UAAAG,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WAJV;AAKD;;;yCAEgB;AACf,eAAKT,eAAL,CAAqBsC,cAArB,CAAoC,KAAKzD,EAAzC,EAA6C,KAAKqB,QAAlD,EACGG,SADH,CACa,UAAAC,IAAI;AAAA,mBAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,WADjB,EACwC,UAAAG,KAAK;AAAA,mBAAIF,OAAO,CAACC,GAAR,CAAYC,KAAZ,CAAJ;AAAA,WAD7C;AAEA,eAAKP,QAAL,GAAgB,IAAI,kDAAJ,EAAhB;AACA,eAAKQ,QAAL;AACD;;;mCAEU;AACT,eAAK4B,cAAL;AACD;;;mCAEU;AACT,eAAKrC,MAAL,CAAYW,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD;;;;;;;uBAlCUyB,uB,EAAuB,+H,EAAA,uH,EAAA,kI;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA,e;AAAA,a;AAAA,2vC;AAAA;AAAA;ACVpC;;AAAI;;AAAe;;AACnB;;AACE;;AAAM;AAAA,mBAAY,IAAAtB,QAAA,EAAZ;AAAsB,WAAtB;;AACJ;;AACE;;AAAuB;;AAAU;;AACjC;;AAAgE;AAAA;AAAA;;AAAhE;;AACF;;AAEA;;AACE;;AAAsB;;AAAS;;AAC/B;;AAA+D;AAAA;AAAA;;AAA/D;;AACF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAA4D;AAAA;AAAA;;AAA5D;;AACF;;AAEA;;AACE;;AAAmB;;AAAY;;AAC/B;;AAA4D;AAAA;AAAA;;AAA5D;;AACF;;AAEA;;AACE;;AAAuB;;AAAU;;AACjC;;AAAgE;AAAA;AAAA;;AAAhE;;AACF;;AAEA;;AACE;;AAA4B;;AAAe;;AAC3C;;AAAqE;AAAA;AAAA;;AAArE;;AACF;;AAEA;;AACE;;AAAwB;;AAAU;;AAClC;;AAAiE;AAAA;AAAA;;AAAjE;;AACF;;AAEA;;AACE;;AAAkB;;AAAI;;AACtB;;AAA2D;AAAA;AAAA;;AAA3D;;AACF;;AAEA;;AAA8C;;AAAM;;AACtD;;AACF;;;;AA5CK;;AAAA;;AAIiE;;AAAA;;AAKD;;AAAA;;AAKH;;AAAA;;AAKA;;AAAA;;AAKI;;AAAA;;AAKK;;AAAA;;AAKJ;;AAAA;;AAKN;;AAAA;;;;;;;;;sED9BpDsB,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT7C,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVpC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM6C,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAInC,OAAO,CAACE,KAAR,CAAciC,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'employee', pathMatch: 'full' },\n  { path: 'employees', component: EmployeeListComponent },\n  { path: 'add', component: CreateEmployeeComponent },\n  { path: 'update/:id', component: UpdateEmployeeComponent },\n  { path: 'details/:id', component: EmployeeDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Employee Management System';\n}\n","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n      <a routerLink=\"employees\" class=\"nav-link\" routerLinkActive=\"active\">Employee List</a>\n    </li>\n    <li class=\"nav-item\">\n      <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add Employee</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <br>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n  </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateEmployeeComponent,\n    EmployeeDetailsComponent,\n    EmployeeListComponent,\n    UpdateEmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  submitted = false;\n\n  constructor(private employeeService: EmployeeService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newEmployee(): void {\n    this.submitted = false;\n    this.employee = new Employee();\n  }\n\n  save() {\n    this.employeeService.createEmployee(this.employee)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.employee = new Employee();\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();\n  }\n\n  gotoList() {\n    this.router.navigate(['/employees'], { queryParams: { refresh: true } });\n  }\n}\n","<h3>Add New Employee</h3>\n<div [hidden]=\"submitted\">\n  <form (ngSubmit)=\"onSubmit()\">\n\n    <br>\n\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"phone\">Phone Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phone\" required [(ngModel)]=\"employee.phone\" name=\"phone\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"taxNumber\">Tax Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"taxNumber\" required [(ngModel)]=\"employee.taxNumber\" name=\"taxNumber\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"employmentType\">Employment Type</label>\n      <input type=\"text\" class=\"form-control\" id=\"employmentType\" required [(ngModel)]=\"employee.employmentType\" name=\"employmentType\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"department\">Department</label>\n      <input type=\"text\" class=\"form-control\" id=\"department\" required [(ngModel)]=\"employee.department\" name=\"department\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"role\">Role</label>\n      <input type=\"text\" class=\"form-control\" id=\"role\" required [(ngModel)]=\"employee.role\" name=\"role\">\n    </div>\n\n    <br>\n\n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-success\">Create</button>\n    </div>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n  <!-- <button class=\"btn btn-success\" (click)=\"newEmployee()\">Add</button> -->\n</div>\n","import { Employee } from '../employee';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  list(){\n    this.router.navigate(['employees']);\n  }\n}\n","<h2 style=\"text-align: center\">Employee Details</h2>\n\n<hr/>\n<div *ngIf=\"employee\" style=\"text-align: center\">\n  <div>\n    <label><b>First Name: </b></label> {{employee.firstName}}\n  </div>\n  <div>\n    <label><b>Last Name: </b></label> {{employee.lastName}}\n  </div>\n  <div>\n    <label><b>Email: </b></label> {{employee.email}}\n  </div>\n  <div>\n    <label><b>Phone: </b></label> {{employee.phone}}\n  </div>\n<!--  <div>-->\n<!--    <label><b>Tax Number: </b></label> {{employee.taxNumber}}-->\n<!--  </div>-->\n  <div>\n    <label><b>Employment Type: </b></label> {{employee.employmentType}}\n  </div>\n  <div>\n    <label><b>Department: </b></label> {{employee.department}}\n  </div>\n  <div>\n    <label><b>Role: </b></label> {{employee.role}}\n  </div>\n</div>\n\n<br>\n<br>\n\n<div style=\"text-align: center\">\n  <button (click)=\"list()\" class=\"btn btn-primary\">Back to Employee List</button><br>\n</div>\n","import { EmployeeDetailsComponent } from '../employee-details/employee-details.component';\nimport { Observable } from 'rxjs';\nimport { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n  employees: Observable<Employee[]>;\n  constructor(private employeeService: EmployeeService,\n              private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.employees = this.employeeService.getEmployeesList();\n  }\n\n  deleteEmployee(id: number) {\n    this.employeeService.deleteEmployee(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  employeeDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n}\n","<div class=\"panel panel-primary\">\n  <div class=\"panel-body\">\n    <table class=\"table table-striped\">\n      <thead>\n      <tr>\n        <th>First Name</th>\n        <th>Last Name</th>\n        <th>Email</th>\n        <th>Phone</th>\n<!--        <th>Tax Number</th>-->\n        <th>Employment Type</th>\n        <th>Department</th>\n        <th>Role</th>\n        <th>Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let employee of employees | async\">\n        <td>{{employee.firstName}}</td>\n        <td>{{employee.lastName}}</td>\n        <td>{{employee.email}}</td>\n        <td>{{employee.phone}}</td>\n<!--        <td>{{employee.taxNumber}}</td>-->\n        <td>{{employee.employmentType}}</td>\n        <td>{{employee.department}}</td>\n        <td>{{employee.role}}</td>\n        <td>\n          <button (click)=\"employeeDetails(employee.id)\" class=\"btn btn-info\" >Details</button>\n          <button (click)=\"deleteEmployee(employee.id)\" class=\"btn btn-danger\" style=\"  margin-left: 10px\">Delete</button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private baseUrl = 'http://employeeapi-env.eba-9ps5d6d5.ap-southeast-2.elasticbeanstalk.com/employees';\n\n  constructor(private http: HttpClient) { }\n\n  getEmployee(id: number): Observable<any> {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n\n  createEmployee(employee: Object): Observable<Object> {\n    return this.http.post(`${this.baseUrl}`, employee);\n  }\n\n  updateEmployee(id: number, value: any): Observable<Object> {\n    return this.http.put(`${this.baseUrl}/${id}`, value);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.delete(`${this.baseUrl}/${id}`, { responseType: 'text' });\n  }\n\n  getEmployeesList(): Observable<any> {\n    return this.http.get(`${this.baseUrl}`);\n  }\n}\n","export class Employee {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  taxNumber: string;\r\n  employmentType: string;\r\n  department: string;\r\n  role: string;\r\n  active: boolean;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n  submitted = false;\n\n  constructor(private route: ActivatedRoute, private router: Router,\n              private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  updateEmployee() {\n    this.employeeService.updateEmployee(this.id, this.employee)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.employee = new Employee();\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.updateEmployee();\n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}\n","<h3>Update Employee</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"phone\">Phone Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"phone\" required [(ngModel)]=\"employee.phone\" name=\"phone\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"taxNumber\">Tax Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"taxNumber\" required [(ngModel)]=\"employee.taxNumber\" name=\"taxNumber\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"employmentType\">Employment Type</label>\n      <input type=\"text\" class=\"form-control\" id=\"employmentType\" required [(ngModel)]=\"employee.employmentType\" name=\"employmentType\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"department\">Department</label>\n      <input type=\"text\" class=\"form-control\" id=\"department\" required [(ngModel)]=\"employee.department\" name=\"department\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"role\">Role</label>\n      <input type=\"text\" class=\"form-control\" id=\"role\" required [(ngModel)]=\"employee.role\" name=\"role\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}